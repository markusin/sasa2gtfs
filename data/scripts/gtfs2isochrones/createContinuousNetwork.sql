-- make a copy from original
DROP TABLE @PED_EDGE_TABLE@;
CREATE TABLE @PED_EDGE_TABLE@ AS (
  SELECT ID,SOURCE,TARGET,LENGTH,GEOMETRY FROM @ORIG_PED_EDGE_TABLE@
);

-- rename column
ALTER TABLE @PED_EDGE_TABLE@ RENAME COLUMN SOURCE TO SOURCE_OLD;
ALTER TABLE @PED_EDGE_TABLE@ RENAME COLUMN TARGET TO TARGET_OLD;
-- add new columns
ALTER TABLE @PED_EDGE_TABLE@ ADD (SOURCE NUMBER, TARGET NUMBER);
-- create temporary indexes;
-- set temp indexes
DROP INDEX IDX1_@PED_EDGE_TABLE@;
DROP INDEX IDX2_@PED_EDGE_TABLE@;
DROP INDEX IDX_ID_@PED_EDGE_TABLE@;
CREATE INDEX IDX1_@PED_EDGE_TABLE@ ON @PED_EDGE_TABLE@(SOURCE_OLD);
CREATE INDEX IDX2_@PED_EDGE_TABLE@ ON @PED_EDGE_TABLE@(TARGET_OLD);
CREATE UNIQUE INDEX IDX_ID_@PED_EDGE_TABLE@ ON @PED_EDGE_TABLE@(ID);
-- create the new node table
DROP TABLE @PED_NODE_TABLE@;
CREATE TABLE @PED_NODE_TABLE@ AS (
 SELECT @SEQUENCE_NAME@.NEXTVAL ID,ID_OLD FROM (
  SELECT SOURCE_OLD AS ID_OLD FROM @PED_EDGE_TABLE@ UNION
  SELECT TARGET_OLD AS ID_OLD FROM @PED_EDGE_TABLE@
 )
);
-- set the indexes
ALTER TABLE @PED_NODE_TABLE@ ADD PRIMARY KEY(ID);
CREATE UNIQUE INDEX IDX_@PED_NODE_TABLE@ ON @PED_NODE_TABLE@(ID_OLD);
-- update the edges with new node value
UPDATE @PED_EDGE_TABLE@ SET SOURCE=(SELECT N.ID FROM @PED_NODE_TABLE@ N WHERE N.ID_OLD=SOURCE_OLD);
UPDATE @PED_EDGE_TABLE@ SET TARGET=(SELECT N.ID FROM @PED_NODE_TABLE@ N WHERE N.ID_OLD=TARGET_OLD);
QUIT